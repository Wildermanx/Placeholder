# -*- coding: utf-8 -*-
"""Sistemas Expertos_Práctica 1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XNy6Op1qKNMqTc11jpTqNl2eqN6w1VCN
"""

#Programa Práctica 1
#Nombre del alumno: Diana Han Kil Guerrero
#Registro: 18310156
#Grado y Grupo: 6to E1
#Maestro: Mauricio Alejandro Cabrera Arellano
#Materia: Sistemas Expertos

from random import seed
from random import shuffle
from random import choice
from random import randint

def Variables():
  SeedV= randint(1,100)
  SusList= ["Cristina","Laura","Javier","Carlos","Rafael","Aurora"]
  Vctm= "placeholder"
  Kllr= "placeholder"
  TKllr= "placeholder"
  WpnList= ["Cuchillo","Pistola","Bate","Botella","Veneno"]
  MWpn= "placeholder"
  TMWpn= "placeholder"
  LctnList= ["Cocina","Pasillo","Sala","Cuarto","Escaleras"]
  MLctn= "placeholder"
  TMLctn= "placeholder"
  Stry= [1,2,3,4,5]
  FrstInt= SusList.copy()
  temp= LctnList.copy()
  FrstInt.extend(temp)
  AlrdInt= ["placeholder"]
  AlrdInv= ["placeholder"]
  IntTries= 3
  LctnTries= 4
  return SusList,Vctm,Kllr,TKllr,WpnList,MWpn,TMWpn,LctnList,MLctn,TMLctn,Stry,SeedV,FrstInt,AlrdInt,AlrdInv,IntTries,LctnTries

def Randomize(SusList,Vctm,Kllr,TKllr,WpnList,MWpn,TMWpn,LctnList,MLctn,TMLct,Stry,SeedV):
  seed(SeedV)
  shuffle(SusList)
  VctmV= 0
  KllrV= 0
  while VctmV== KllrV:
    VctmV= randint(0,5)
    KllrV= randint(0,5)
  Vctm= SusList[VctmV]
  TKllr= SusList[KllrV]
  i=0
  for x in SusList:
    if Vctm==x:
      del SusList[i]
    i= i+1
  TMWpn= choice(WpnList)
  TMLctn= choice(LctnList)
  SStry= choice(Stry)
  WtnsList= SusList.copy()
  i= 0
  for x in WtnsList:
    if x== TKllr:
      del WtnsList[i]
    i=i+1
  nowtns= choice(WtnsList)
  i=0
  for x in WtnsList:
    if x== nowtns:
      del WtnsList[i]
    i= i+1
  wtlie= choice(SusList)
  while wtlie== TKllr:
    wtlie= choice(SusList)
  WpnLctns= []
  for x in WpnList:
    wpnl= choice(LctnList)
    WpnLctns.append(wpnl)
  Evidence= dict(zip(WpnList,WpnLctns))
  mllie= choice(LctnList)
  while mllie== TMLctn:
    mllie= choice(LctnList)
  return SusList,Vctm,Kllr,TKllr,WpnList,MWpn,TMWpn,LctnList,MLctn,TMLctn,SStry,WtnsList,nowtns,wtlie,Evidence,mllie

def Interrogate(SusList,TKllr,TMLctn,WtnsList,nowtns,wtlie,FrstInt,AlrdInt,IntTries,mllie):
  interr=True
  while interr== True:
    if (IntTries<= 0):
      print("\nHas agotado tus intentos de interrogar a los sospechosos.\n")
      print("\nInterrogaste a "+AlrdInt[1]+", a "+AlrdInt[2]+" y a "+AlrdInt[3]+".\n")
      interr= False
      break
    ii=0
    intopc= 0
    print("\nEstás a punto de interrogar a uno de los sospechosos. ¿A quién le quieres preguntar?\n")
    for x in SusList:
      iis=str(ii+1)
      sus= SusList[ii]
      print(iis+")"+sus)
      ii= ii+1
    iis=str(ii+1)
    print(iis+")Regresar\n")
    intopc= input("Selecciona una opción:\n")
    if intopc.isdigit()==True:
      intopcN=int(intopc)
      intopcN=intopcN-1
    while ((intopc.isdigit()==False) or (intopcN<0) or (intopcN>5)):
      print("\nPor favor introduce un valor numérico válido.")
      intopc=input("\nSelecciona una opción:\n")
      if intopc.isdigit()==True:
        intopcN=int(intopc)
        intopcN=intopcN-1
    if intopcN>=0 and intopcN<=4:
      print("\nDecides interrogar a "+SusList[intopcN])
      FrstInt,IntTries= IDialogue(intopcN,SusList,TKllr,TMLctn,WtnsList,nowtns,wtlie,FrstInt,AlrdInt,IntTries,mllie)
    if (intopcN== 5):
      interr= False
  return IntTries

def IDialogue(num,SusList,TKllr,TMLctn,WtnsList,nowtns,wtlie,FrstInt,AlrdInt,IntTries,mllie):
  i= 0
  if SusList[num]== 'Cristina':
    for x in FrstInt:
      if x== SusList[num]:
        print("\n"+SusList[num]+" es una persona responsable, impaciente y lógica. Quiere que el asesinato\n",
              "se resuelva pronto para poder volver a sus asuntos. Se muestra indiferente ante la muerte\n",
              "de la víctima. Trabaja como contadora privada para una empresa de muebles.")
        del FrstInt[i]
        IntTries= IntTries-1
        already= SusList[num]
        AlrdInt.append(already)
      i= i+1
    print("\n"+SusList[num]+": Espero que no me estés considerando una posible sospechosa de este asesinato.\n",
          "Yo tengo asuntos más importantes que atender.")
    if SusList[num]== TKllr:
      print(SusList[num]+": Estuve con "+wtlie+" cuando ocurrieron los hechos.")
      if mllie== 'Cocina' or mllie== 'Sala':
        print(SusList[num]+": Debería revisar la "+mllie+". Estoy segura de haber escuchado mucho alboroto\n",
              "viniendo de ese lugar.")
      if mllie== 'Pasillo' or mllie== 'Cuarto':
        print(SusList[num]+": Debería revisar el "+mllie+". Estoy segura de haber escuchado mucho alboroto\n",
              "viniendo de ese lugar.")
      if mllie== 'Escaleras':
        print(SusList[num]+": Debería revisar las "+mllie+". Estoy segura de haber escuchado mucho alboroto\n",
              "viniendo de ese lugar.")
    else:
      if (SusList[num]== WtnsList[0]):
        print(SusList[num]+": Estuve con "+WtnsList[1]+" y "+WtnsList[2]+" cuando ocurrieron los hechos.")
      elif (SusList[num]== WtnsList[1]):
        print(SusList[num]+": Estuve con "+WtnsList[0]+" cuando ocurrieron los hechos.")
      elif (SusList[num]== WtnsList[2]):
        print(SusList[num]+": Estuve con "+WtnsList[0]+" cuando ocurrieron los hechos.")
      elif (SusList[num]== nowtns):
        print(SusList[num]+": Estuve sola cuando ocurrieron los hechos.")
      if TMLctn== 'Cocina' or TMLctn== 'Sala':
        print(SusList[num]+": Debería revisar la "+TMLctn+". Estoy segura de haber escuchado mucho alboroto\n",
              "viniendo de ese lugar.")
      if TMLctn== 'Pasillo' or TMLctn== 'Cuarto':
        print(SusList[num]+": Debería revisar el "+TMLctn+". Estoy segura de haber escuchado mucho alboroto\n",
              "viniendo de ese lugar.")
      if TMLctn== 'Escaleras':
        print(SusList[num]+": Debería revisar las "+TMLctn+". Estoy segura de haber escuchado mucho alboroto\n",
              "viniendo de ese lugar.")
  if SusList[num]== 'Laura':
    for x in FrstInt:
      if x== SusList[num]:
        print("\n"+SusList[num]+" es una mujer emotiva, asustadiza y algo olvidadiza. Se muestra nerviosa \n",
              "ante la terrible pérdida y le aterra sentir que podría ser la siguiente víctima. En general\n",
              "no es una testigo muy confiable, pero es muy dedicada a su trabajo como cocinera para una\n",
              "fábrica de textiles.")
        del FrstInt[i]
        IntTries= IntTries-1
        already= SusList[num]
        AlrdInt.append(already)
      i= i+1
    print("\n"+SusList[num]+": ¿Por qué me interrogas a mí? ¿Qué no ves que el asesino sigue en esta casa y\n",
          "que yo podría ser la siguiente en morir?")
    if SusList[num]== TKllr:
      print(SusList[num]+": Yo andaba platicando con "+wtlie+".")
    else:
      if (SusList[num]== WtnsList[0]):
        print(SusList[num]+": Yo andaba platicando con "+WtnsList[1]+" y "+WtnsList[2]+".")
      elif (SusList[num]== WtnsList[1]):
        print(SusList[num]+": Yo andaba platicando con "+WtnsList[0]+".")
      elif (SusList[num]== WtnsList[2]):
        print(SusList[num]+": Yo andaba platicando con "+WtnsList[0]+".")
      elif (SusList[num]== nowtns):
        print(SusList[num]+": Anduve sola a esas horas.")
  if SusList[num]== 'Javier':
    for x in FrstInt:
      if x== SusList[num]:
        print("\n"+SusList[num]+" es un hombre agresivo, egoísta e interesado. Se muestra a la defensiva\n",
              "siempre y aprovechará cualquier beneficio que le proporcione la muerte de la víctima sin\n",
              "importarle los sentimientos de las personas a su alrededor. Se dedica a su empleo como entrenador\n",
              "de un equipo de baseball profesional.")
        del FrstInt[i]
        IntTries= IntTries-1
        already= SusList[num]
        AlrdInt.append(already)
      i= i+1
    print("\n"+SusList[num]+": No me hagas perder el tiempo. Yo no soy ningún asesino y podría partirte la cara\n",
          "por acusarme de esta forma.")
    if SusList[num]== TKllr:
      print(SusList[num]+": Yo no fuí. Pregúntale a "+wtlie+", estábamos platicando.")
    else:
      if (SusList[num]== WtnsList[0]):
        print(SusList[num]+": Yo no fuí. Pregúntale a "+WtnsList[1]+" y "+WtnsList[2]+", estábamos platicando.")
      elif (SusList[num]== WtnsList[1]):
        print(SusList[num]+": Yo no fuí. Pregúntale a "+WtnsList[0]+", estábamos platicando.")
      elif (SusList[num]== WtnsList[2]):
        print(SusList[num]+": Yo no fuí. Pregúntale a "+WtnsList[0]+", estábamos platicando.")
      elif (SusList[num]== nowtns):
        print(SusList[num]+": Andaba solo cuando eso pasó.")
  if SusList[num]== 'Carlos':
    for x in FrstInt:
      if x== SusList[num]:
        print("\n"+SusList[num]+" es un hombre relajado, que se muestra indiferente y algo aburrido a\n.",
              "pesar de los acontecimientos recientes. Realmente no le importa si se resuelve el asesinato\n",
              "o no, sin importar que obtenga algún beneficio de la muerte de la víctima. "+SusList[num]+"\n",
              "trabaja como arquitecto privado profesional.")
        del FrstInt[i]
        IntTries= IntTries-1
        already= SusList[num]
        AlrdInt.append(already)
      i= i+1
    print("\n"+SusList[num]+": No sé qué esperas lograr con esta charla, pero verdaderamente no me interesa\n",
          "todo este asunto del crimen. Le diré lo que sé, pero no espere mucho de mi parte.")
    if SusList[num]== TKllr:
      print(SusList[num]+": Estuve con "+wtlie+" más o menos a esa hora.")
    else:
      if (SusList[num]== WtnsList[0]):
        print(SusList[num]+": Estuve con "+WtnsList[1]+" y "+WtnsList[2]+" más o menos a esa hora.")
      elif (SusList[num]== WtnsList[1]):
        print(SusList[num]+": Estuve con "+WtnsList[0]+" más o menos a esa hora.")
      elif (SusList[num]== WtnsList[2]):
        print(SusList[num]+": Estuve con "+WtnsList[0]+" más o menos a esa hora.")
      elif (SusList[num]== nowtns):
        print(SusList[num]+": Estuve solo más o menos a esa hora.")
  if SusList[num]== 'Rafael':
    for x in FrstInt:
      if x== SusList[num]:
        print("\nRafael es un individuo calmado, amable y cooperativo. Se muestra dispuesto a ayudar\n",
              "a que se resuelva este crimen. Es un operador de CNC responsable para una empresa que\n",
              "fabrica refacciones para varios tipos de maquinaria.")
        del FrstInt[i]
        IntTries= IntTries-1
        already= SusList[num]
        AlrdInt.append(already)
      i= i+1
    print("\n"+SusList[num]+": Buenas tardes, detective. Espero serle de ayuda para esta investigación.\n",
          "Deberá saber que lamento mucho lo ocurrido y ayudaré con lo que pueda.")
    if SusList[num]== TKllr:
      print(SusList[num]+": "+wtlie+" estuvo conmigo.")
      if mllie== 'Cocina' or mllie== 'Sala':
        print(SusList[num]+": Me pareció escuchar una pelea cerca de la "+mllie+", así que quizá le sea útil\n",
              "investigar ese lugar.")
      if mllie== 'Pasillo' or mllie== 'Cuarto':
        print(SusList[num]+": Me pareció escuchar una pelea cerca de el "+mllie+", así que quizá le sea útil\n",
              "investigar ese lugar.")
      if mllie== 'Escaleras':
        print(SusList[num]+": Me pareció escuchar una pelea cerca de las "+mllie+", así que quizá le sea útil\n",
              "investigar ese lugar.")
    else:
      if (SusList[num]== WtnsList[0]):
        print(SusList[num]+": "+WtnsList[1]+" y "+WtnsList[2]+" estuvieron conmigo.")
      elif (SusList[num]== WtnsList[1]):
        print(SusList[num]+": "+WtnsList[0]+" estuvo conmigo.")
      elif (SusList[num]== WtnsList[2]):
        print(SusList[num]+": "+WtnsList[0]+" estuvo conmigo.")
      elif (SusList[num]== nowtns):
        print(SusList[num]+": Lo lamento, estaba solo.")
      if TMLctn== 'Cocina' or TMLctn== 'Sala':
        print(SusList[num]+": Me pareció escuchar una pelea cerca de la "+TMLctn+", así que quizá le sea útil\n",
              "investigar ese lugar.")
      if TMLctn== 'Pasillo' or TMLctn== 'Cuarto':
        print(SusList[num]+": Me pareció escuchar una pelea cerca de el "+TMLctn+", así que quizá le sea útil\n",
              "investigar ese lugar.")
      if TMLctn== 'Escaleras':
        print(SusList[num]+": Me pareció escuchar una pelea cerca de las "+TMLctn+", así que quizá le sea útil\n",
              "investigar ese lugar.")
  if SusList[num]== 'Aurora':
    for x in FrstInt:
      if x== SusList[num]:
        print("\nAurora es una mujer callada, sociable y formal. Se muestra amigable y respetuosa, pero no\n",
              "habla mucho en general. Es la más habitante que más recientemente se unió a este complejo\n",
              "de apartamentos, por lo que no está muy familiarizada con los demás. Trabaja como la diseñadora\n",
              "gráfica de una empresa de venta de productos del hogar.")
        del FrstInt[i]
        IntTries= IntTries-1
        already= SusList[num]
        AlrdInt.append(already)
      i= i+1
    print("\n"+SusList[num]+": Un gusto saludarlo. Yo no soy una asesina, así que le diré todo lo que sé.\n")
    if SusList[num]== TKllr:
      print(SusList[num]+": Me encontraba con "+wtlie+" cuando ocurrió.")
      if mllie== 'Cocina' or mllie== 'Sala':
        print(SusList[num]+": Estoy muy segura de haber escuchado una pelea alrededor de la "+mllie+".\n",
              "Debería ir a investigarla.")
      if mllie== 'Cuarto' or mllie== 'Pasillo':
        print(SusList[num]+": Estoy muy segura de haber escuchado una pelea alrededor del "+mllie+".\n",
              "Debería ir a investigarlo.")
      if mllie== 'Escaleras':
        print(SusList[num]+": Estoy muy segura de haber escuchado una pelea alrededor de las "+mllie+".\n",
              "Debería ir a investigarlas.")
    else:
      if (SusList[num]== WtnsList[0]):
        print(SusList[num]+": Me encontraba con "+WtnsList[1]+" y "+WtnsList[2]+" cuando ocurrió.")
      elif (SusList[num]== WtnsList[1]):
        print(SusList[num]+": Me encontraba con "+WtnsList[0]+" cuando ocurrió.")
      elif (SusList[num]== WtnsList[2]):
        print(SusList[num]+": Me encontraba con "+WtnsList[0]+" cuando ocurrió.")
      elif (SusList[num]== nowtns):
        print(SusList[num]+": Me encontraba sola cuando ocurrió.")
      print(SusList[num]+": Recuerdo haber escuchado una pelea, pero lamento decirle que no sabría identificar\n",
            "en qué lugar sucedió.")
  return FrstInt,IntTries

def InvestLctn(WpnList,TMWpn,LctnList,TMLctn,Evidence,FrstInt,AlrdInv,LctnTries):
  interr=True
  while interr== True:
    if (LctnTries<= 0):
      print("\nHas agotado tus intentos de investigar las locaciones.\n")
      print("\nInvestigaste los siguientes lugares: "+AlrdInv[1]+", "+AlrdInv[2]+", "+AlrdInv[3]+" y "+AlrdInv[4]+".\n")
      interr= False
      break
    ii=0
    intopc= 0
    print("\nEstás a punto de investigar a una de las siguientes locaciones. ¿Cuál quieres ver?\n")
    for x in LctnList:
      iis=str(ii+1)
      loc= LctnList[ii]
      print(iis+")"+loc)
      ii= ii+1
    iis=str(ii+1)
    print(iis+")Regresar\n")
    intopc= input("Selecciona una opción:\n")
    if intopc.isdigit()==True:
      intopcN=int(intopc)
      intopcN=intopcN-1
    while ((intopc.isdigit()==False) or (intopcN<0) or (intopcN>6)):
      print("\nPor favor introduce un valor numérico válido.")
      intopc=input("\nSelecciona una opción:\n")
      if intopc.isdigit()==True:
        intopcN=int(intopc)
        intopcN=intopcN-1
    if intopcN== 0 or intopcN== 2:
      print("\nDecides investigar en la "+LctnList[intopcN])
      FrstInt,LctnTries= LDialogue(intopcN,WpnList,TMWpn,LctnList,TMLctn,Evidence,FrstInt,AlrdInv,LctnTries)
    if intopcN== 1 or intopcN== 3:
      print("\nDecides investigar en el "+LctnList[intopcN])
      FrstInt,LctnTries= LDialogue(intopcN,WpnList,TMWpn,LctnList,TMLctn,Evidence,FrstInt,AlrdInv,LctnTries)
    if intopcN== 4:
      print("\nDecides investigar en las "+LctnList[intopcN])
      FrstInt,LctnTries= LDialogue(intopcN,WpnList,TMWpn,LctnList,TMLctn,Evidence,FrstInt,AlrdInv,LctnTries)
    if intopcN== 5:
      interr= False
  return LctnTries

def LDialogue(num,WpnList,TMWpn,LctnList,TMLctn,Evidence,FrstInt,AlrdInv,LctnTries):
  i= 0
  ii= 0
  if LctnList[num]== 'Cocina':
    for x in FrstInt:
      if x== LctnList[num]:
        del FrstInt[i]
        LctnTries= LctnTries-1
        already= LctnList[num]
        AlrdInv.append(already)
      i= i+1
    if LctnList[num]== TMLctn:
      print("\nLa cocina se ve destruida, como si hubiera habido una pelea reciente.\n",
            "Hay rastros de sangre en el piso y objetos rotos tirados por todos lados.")
      LEvidence(num,WpnList,TMWpn,LctnList,Evidence)
    else:
      print("\nLa cocina se ve intacta, sin rastros de violencia o sangre. Todos los objetos presentes\n",
            "están perfectamente acomodados en sus debidos lugares.")
      LEvidence(num,WpnList,TMWpn,LctnList,Evidence)
  if LctnList[num]== 'Pasillo':
    for x in FrstInt:
      if x== LctnList[num]:
        del FrstInt[i]
        LctnTries= LctnTries-1
        already= LctnList[num]
        AlrdInv.append(already)
      i= i+1
    if LctnList[num]== TMLctn:
      print("\nLas paredes del pasillo están manchadas de sangre, con un charco enorme a mitad del mismo.",
            "\n")
      LEvidence(num,WpnList,TMWpn,LctnList,Evidence)
    else:
      print("\nEl pasillo se ve como cualquier otro día, las paredes y piso están límpios y sin marcas\n",
            "que indiquen una pelea.")
      LEvidence(num,WpnList,TMWpn,LctnList,Evidence)
  if LctnList[num]== 'Sala':
    for x in FrstInt:
      if x== LctnList[num]:
        del FrstInt[i]
        LctnTries= LctnTries-1
        already= LctnList[num]
        AlrdInv.append(already)
      i= i+1
    if LctnList[num]== TMLctn:
      print("\nLa sala se ve como si hubiera sucedido un terremoto, con objetos tirados y rotos en el piso\n",
            "y manchas de sangre adornan algunos de los muebles del lugar.")
      LEvidence(num,WpnList,TMWpn,LctnList,Evidence)
    else:
      print("\nLa sala se ve como un lugar acogedor, donde podrías descansar después de una atareada tarde\n",
            "como investigador privado. Todo se ve en orden y relativamente límpio.")
      LEvidence(num,WpnList,TMWpn,LctnList,Evidence)
  if LctnList[num]== 'Cuarto':
    for x in FrstInt:
      if x== LctnList[num]:
        del FrstInt[i]
        LctnTries= LctnTries-1
        already= LctnList[num]
        AlrdInv.append(already)
      i= i+1
    if LctnList[num]== TMLctn:
      print("\nEl cuarto se ve desordenado, con manchas de sangre pintando las paredes y un charco\n",
            "acumulado en medio del lugar.")
      LEvidence(num,WpnList,TMWpn,LctnList,Evidence)
    else:
      print("\nEl cuarto se ve como cualquier otro, sin rastros de pelea o signos de que haya sucedido\n",
            "algo fuera de lo común recientemente.")
      LEvidence(num,WpnList,TMWpn,LctnList,Evidence)
  if LctnList[num]== 'Escaleras':
    for x in FrstInt:
      if x== LctnList[num]:
        del FrstInt[i]
        LctnTries= LctnTries-1
        already= LctnList[num]
        AlrdInv.append(already)
      i= i+1
    if LctnList[num]== TMLctn:
      print("\nLas escaleras están manchadas con la sangre de la víctima, goteando hacia el piso de abajo\n",
      "y creando escalofriantes patrones a lo largo de los escalones.")
      LEvidence(num,WpnList,TMWpn,LctnList,Evidence)
    else:
      print("\nLas escaleras están impecables y con buen mantenimiento. Sería difícil imaginar que un\n",
            "terrible asesinato pudiera suceder aquí.")
      LEvidence(num,WpnList,TMWpn,LctnList,Evidence)
  return FrstInt,LctnTries

def LEvidence(num,WpnList,TMWpn,LctnList,Evidence):
  i= 0
  ii= 0
  CurrentL= LctnList[num]
  for x in Evidence:
    Wloc= Evidence.get(WpnList[i])
    if Wloc== CurrentL:
      if ii== 0:
        if WpnList[i]== 'Cuchillo' or WpnList[i]== 'Bate' or WpnList[i]== 'Veneno':
          print("En la cercanía encuentras el "+WpnList[i])
        if WpnList[i]== 'Pistola' or WpnList[i]== 'Botella':
          print("En la cercanía encuentras la "+WpnList[i])
      else:
        if WpnList[i]== 'Cuchillo' or WpnList[i]== 'Bate' or WpnList[i]== 'Veneno':
          print("y también el "+WpnList[i])
        if WpnList[i]== 'Pistola' or WpnList[i]== 'Botella':
          print("y también la "+WpnList[i])
      if WpnList[i]== TMWpn:
        if WpnList[i]== 'Cuchillo':
          print("El cuchillo se ve ensangrentado.")
        if WpnList[i]== 'Bate':
          print("El bate se encuentra algo astillado y con una mancha notable de sangre.")
        if WpnList[i]== 'Veneno':
          print("El pequeño frasco de veneno parece haber sido abierto recientemente.")
        if WpnList[i]== 'Pistola':
          print("La pistola tiene gotas de sangre.")
        if WpnList[i]== 'Botella':
          print("La botella rota que ves en el piso está manchada con sangre.")
      ii= ii+1
    i= i+1
  if ii== 0:
    print("No encuentras ninguna de las posibles armas homicida en el lugar.")

def FinalAcus(SusList,Vctm,Kllr,WpnList,MWpn,LctnList,MLctn):
  interr=True
  while interr== True:
    print("\nEstás a punto de realizar tu Acusación Final. ¿Seguro que deseas proceder?",
          "\nADVERTENCIA: No podrás regresar a investigar una vez que confirmes esta opción.\n\n",
          "1)Quiero realizar mi Acusación Final\n 2)Quiero seguir investigando/Regresar")
    confirm= input("Selecciona una opción:\n")
    if confirm.isdigit()==True:
      confirmn=int(confirm)
      while ((confirm.isdigit()==False) or (confirmn<=0) or (confirmn>2)):
        print("\nPor favor introduce un valor numérico válido.")
        confirm=input("\nSelecciona una opción:\n")
        if confirm.isdigit()==True:
          confirmn=int(confirm)
    if confirmn== 1:
      ii= 0
      acus= 0
      print("\nHas decidido dar tu Acusación Final.\n\nA continuación se muestra tu lista de sospechosos:\n")
      for x in SusList:
        iis=str(ii+1)
        sus= SusList[ii]
        print(iis+")"+sus)
        ii= ii+1
      iis=str(ii+1)
      acus=input("\nSelecciona a quien consideras que es el asesino:\n")
      if acus.isdigit()==True:
        acusn=int(acus)
        acusn=acusn-1
      while ((acus.isdigit()==False) or (acusn<0) or (acusn>4)):
        print("\nPor favor introduce un valor numérico válido.")
        acus=input("\nSelecciona a quien consideras que es el asesino:\n")
        if acus.isdigit()==True:
          acusn=int(acus)
          acusn=acusn-1
      Kllr=SusList[acusn]
      print("\n Se muestra la lista de posibles armas homicidas:\n")
      ii= 0
      acus= 0
      for x in WpnList:
        iis=str(ii+1)
        loc= WpnList[ii]
        print(iis+")"+loc)
        ii= ii+1
      iis=str(ii+1)
      acus= input("\nSelecciona el arma que consideras que es responsable del asesinato:\n")
      if acus.isdigit()==True:
        acusn=int(acus)
        acusn=acusn-1
      while ((acus.isdigit()==False) or (acusn<0) or (acusn>4)):
        print("\nPor favor introduce un valor numérico válido.")
        acus=input("\nSelecciona el arma que consideras que es responsable del asesinato:\n")
        if acus.isdigit()==True:
          acusn=int(acus)
          acusn=acusn-1
      MWpn= WpnList[acusn]
      print("\nSe muestra la lista de locaciones posibles donde pudo darse el homicidio:\n")
      ii= 0
      acus= 0
      for x in LctnList:
        iis=str(ii+1)
        loc= LctnList[ii]
        print(iis+")"+loc)
        ii= ii+1
      iis=str(ii+1)
      acus= input("\nSelecciona el lugar en donde consideras que ocurrió el crimen:\n")
      if acus.isdigit()==True:
        acusn=int(acus)
        acusn=acusn-1
      while ((acus.isdigit()==False) or (acusn<0) or (acusn>4)):
        print("\nPor favor introduce un valor numérico válido.")
        acus=input("\nSelecciona el lugar en donde consideras que ocurrió el crimen:\n")
        if acus.isdigit()==True:
          acusn=int(acus)
          acusn=acusn-1
      MLctn= LctnList[acusn]
      print("\nTu Acusación Final resulta de la siguiente manera:\n")
      if Kllr== 'Cristina' or Kllr== 'Laura' or Kllr=='Aurora':
        print("La asesina es "+Kllr)
      if Kllr== 'Javier' or Kllr== 'Carlos' or Kllr== 'Rafael':
        print("El asesino es "+Kllr)
      if MWpn== 'Cuchillo' or MWpn== 'Bate' or MWpn== 'Veneno':
        print(" quien mató a "+Vctm+" usando el "+MWpn+" en ")
      if MWpn== 'Pistola' or MWpn== 'Botella':
        print(" quien mató a "+Vctm+" usando la "+MWpn+" en ")
      if MLctn== 'Cocina' or MLctn== 'Sala':
        print("la "+MLctn+".\n")
      if MLctn== 'Pasillo' or MLctn== 'Cuarto':
        print("el "+MLctn+".\n")
      if MLctn== 'Escaleras':
        print("las "+MLctn+".\n")
      return Kllr,MWpn,MLctn,interr
    if confirmn== 2:
      interr= False
  return Kllr,MWpn,MLctn,interr

def Test(Kllr,MWpn,MLctn,TKllr,TMWpn,TMLctn):
  KTR= False
  WTR= False
  LTR= False
  print("\nAl comparar tu acusación con los verdaderos hechos, podemos concluir que: ")
  if Kllr== TKllr:
    KTR= True
  if MWpn== TMWpn:
    WTR= True
  if MLctn== TMLctn:
    LTR= True
  if KTR== True and WTR== True and LTR== True:
    print("\nLograste resolver este crimen y exitósamente identificaste al asesino, el arma homicida y\n",
          "el lugar donde ocurrió el asesinato. ¡Felicidades!\nMostraremos los verdaderos hechos a continuación.\n")
  if KTR== False or WTR== False or LTR== False:
    print("\nNo has logrado resolver el crimen, debido a que")
    if KTR== False:
      print("no identificaste correctamente al asesino")
    if WTR== False:
      print("no identificaste correctamente el arma homicida")
    if LTR== False:
      print("no identificaste correctamente el lugar del asesinato")
    print("\nLo sentimos. Mostraremos los verdaderos hechos a continuación.\n")

def Truth(Vctm,TKllr,TMWpn,TMLctn,SStry):
  if TKllr== 'Cristina':
    print("La fría asesina de este caso fue "+TKllr)
  if TKllr== 'Laura':
    print("La emotiva "+TKllr+" fue la responsable de asesinar a "+Vctm)
  if TKllr== 'Javier':
    print("No fue sorpresa enterarse que "+TKllr+" fue el asesino.")
  if TKllr== 'Carlos':
    print("A pesar de ser tan relajado, fue "+TKllr+" quien asesinó a "+Vctm)
  if TKllr== 'Rafael':
    print("Sorprendentemente, "+TKllr+" fue el asesino.")
  if TKllr== 'Aurora':
    print("Enterarse de que "+TKllr+" fue quien asesinó a "+Vctm+" se convirtió en una noticia impresionante.")
  if SStry== 1:
    print(Vctm+" tenía una fuerte deuda con "+TKllr+". Y acabó pagando con su propia sangre.")
  if SStry== 2:
    print(TKllr+" se molestó mucho con "+Vctm+" debido a una discusión que ocurrió entre ambos, lo",
          "que provocó la ira que llevó al asesinato.")
  if SStry== 3:
    print("La muerte de "+Vctm+" le permitiría a "+TKllr+" conseguir un mejor puesto en su trabajo,",
          "por lo que recurrió al asesinato.")
  if SStry== 4 and (TKllr=='Cristina' or TKllr=='Laura'):
    print(TKllr+", una asesina en serie que no había sido capturada, simplemente decidió que "+Vctm+
          " sería su siguiente víctima.")
  if SStry== 4 and (TKllr=='Javier' or TKllr=='Carlos' or TKllr=='Rafael'):
    print(TKllr+", un asesino en serie que no había sido capturado, simplemente decidió que "+Vctm+
          " sería su siguiente víctima.")
  if SStry== 5:
    print("Alguien quería quitar a "+Vctm+" de su camino, por lo que "+TKllr+" recibió una suma\n",
          "de dinero para eliminar a "+Vctm)
  if TMWpn== 'Cuchillo' and (Vctm=='Cristina' or Vctm=='Laura' or Vctm=='Aurora'):
    print(Vctm+" fue apuñalada con el filo de un cuchillo y ")
  if TMWpn== 'Cuchillo' and (Vctm=='Javier' or Vctm=='Carlos' or Vctm=='Rafael'):
    print(Vctm+" fue apuñalado con el filo de un cuchillo y ")
  if TMWpn== 'Pistola':
    print("A "+Vctm+" le dispararon con una pistola y ")
  if TMWpn== 'Bate':
    print(Vctm+" murió de un golpe contundente a la cabeza con un bate y ")
  if TMWpn== 'Botella' and (Vctm=='Cristina' or Vctm=='Laura' or Vctm=='Aurora'):
    print(Vctm+" murió desangrada por los cortes de una botella rota y ")
  if TMWpn== 'Botella' and (Vctm=='Javier' or Vctm=='Carlos' or Vctm=='Rafael'):
    print(Vctm+" murió desangrado por los cortes de una botella rota y ")
  if TMWpn== 'Veneno' and (Vctm=='Cristina' or Vctm=='Laura' or Vctm=='Aurora'):
    print("A "+Vctm+" la enveneraron con cianuro y ")
  if TMWpn== 'Veneno' and (Vctm=='Javier' or Vctm=='Carlos' or Vctm=='Rafael'):
    print("A "+Vctm+" lo enveneraron con cianuro y ")
  if TMLctn== 'Cocina':
    print("el asesinato tuvo lugar en la cocina.\n")
  if TMLctn== 'Pasillo':
    print("el crimen se llevó a cabo en el pasillo.\n")
  if TMLctn== 'Sala':
    print("el asesinato sucedió en la sala.\n")
  if TMLctn== 'Cuarto':
    print("el asesinato se llevó a cabo en el cuarto.\n")
  if TMLctn== 'Escaleras':
    print("el crimen sucedió en medio de las escaleras.\n")

print("Práctica 1\n")

exit=False
while exit==False:
  opc=0
  opcinv=0
  investigation=True
  print("Nombre del Juego: Placeholder")
  print("\nMenú:\n1)Iniciar el Juego\n2)Salir del Programa")
  opc=input("Seleccione una opción:\n")
  if opc.isdigit()==True:
    opcn=int(opc)
  while ((opc.isdigit()==False) or (opcn<=0) or (opcn>2)):
    print("\nPor favor introduce un valor numérico válido.")
    opc=input("\nSelecciona una opción:\n")
    if opc.isdigit()==True:
      opcn=int(opc)
  if opcn==1:
    SL,V,K,TK,WL,MW,TMW,LL,ML,TML,Story,sval,FI,AI,AInv,IT,LT= Variables()
    SL,V,K,TK,WL,MW,TMW,LL,ML,TML,Story,WtL,nWt,Wtlie,Evid,MLlie= Randomize(SL,V,K,TK,WL,MW,TMW,LL,ML,TML,Story,sval)

    print("\n Eres un investigador tratando de resolver un asesinato reciente que tuvo lugar en un complejo\n",
    "de apartamentos, donde vivían 6 personas. "+V+", uno de los habitantes, se encontró sin vida y debes\n",
    "averiguar quién fue el responsable, cómo murió la víctima, y en qué lugar sucedió el crimen.\n")
    print("\n Para lograr esto, deberás investigar las locaciones del edificio, las posibles armas homicidas\n",
    "y preguntar a los habitantes del lugar por cualquier información que puedan proporcionar. Sin embargo,\n",
    "no todos son muy cooperativos. Y el asesino obviamente no quiere ser descubierto, por lo que podría\n",
    "ocultar información o incluso proporcionar información falsa. Tu trabajo será revelar la verdad a pesar\n",
    "de estos contratiempos, fijándote en las posibles contradicciones o comportamientos fuera de lugar de\n",
    "los personajes. Sin embargo, toma en cuenta que solo tendrás la oportunidad de preguntar a 3 de los 5\n",
    "habitantes e investigar 4 de las 5 posibles locaciones.")

    while investigation== True:
      print("\n¿Qué quieres hacer ahora?\n1)Interrogar a alguien\n2)Investigar un lugar\n3)Acusación final")
      opcinv=input("Seleccione una opción:\n")
      if opcinv.isdigit()==True:
        opcinvN=int(opcinv)
      while ((opcinv.isdigit()==False) or (opcinvN<=0) or (opcinvN>3)):
        print("\nPor favor introduce un valor numérico válido.")
        opcinv=input("\nSelecciona una opción:\n")
        if opcinv.isdigit()==True:
          opcinvN=int(opcinv)
      if opcinvN== 1:
        IT= Interrogate(SL,TK,TML,WtL,nWt,Wtlie,FI,AI,IT,MLlie)
      if opcinvN== 2:
        LT= InvestLctn(WL,TMW,LL,TML,Evid,FI,AInv,LT)
      if opcinvN== 3:
        AK,AW,AL,interr=FinalAcus(SL,V,K,WL,MW,LL,ML)
        if interr== True:
          investigation= False

    Test(AK,AW,AL,TK,TMW,TML)
    Truth(V,TK,TMW,TML,Story)

    exit=False
  if opcn==2:
    print("\nGracias por su atención.")
    exit=True
    break